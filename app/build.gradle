apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.aviasales.task"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        def keystorePropertiesFile = rootProject.file("keystore.properties")
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        signDebug {
            storeFile file(keystoreProperties['KEYSTORE_FILE_PATH'])
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['DEBUG_KEY_ALIAS']
            keyPassword keystoreProperties['DEBUG_KEY_ALIAS_PASSWORD']
        }

        signRelease {
            storeFile file(keystoreProperties['KEYSTORE_FILE_PATH'])
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['DEBUG_KEY_ALIAS']
            keyPassword keystoreProperties['DEBUG_KEY_ALIAS_PASSWORD']
        }
    }

    flavorDimensions "default"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def date = new Date().format("dd-MM-yy", TimeZone.getTimeZone("UTC"))
            outputFileName = "AviasalesTask" +
                    "_v${defaultConfig.versionName}" +
                    "_${date}" +
                    ".apk"
        }
    }

    productFlavors {
        stage {
            signingConfig signingConfigs.signDebug
            dimension "default"
            buildConfigField "String", "BASE_URL", '"url"'
        }

        prod {
            signingConfig signingConfigs.signRelease
            dimension "default"
            buildConfigField "String", "BASE_URL", '"url"'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':repository')
    implementation project(':utils')

    implementation Deps.kotlinStdlib
    implementation Deps.androidKtx

    implementation Deps.constraintLayout
    implementation Deps.appCompat

    implementation Deps.material

    implementation Deps.rxJava
    implementation Deps.rxKotlin
    implementation Deps.rxAndroid
    implementation Deps.rxRelay
    implementation Deps.rxBindingKotlin
    implementation Deps.rxBindingDesignKotlin
    implementation Deps.rxBindingAppCompatV7Kotlin

    implementation Deps.navigationFragment
    implementation Deps.navigationUI

    implementation Deps.lifecycle

    implementation Deps.koinCore
    implementation Deps.koinAndroid
    implementation Deps.koinCoreScope
    implementation Deps.koinAndroidViewModel

    implementation Deps.googleMaps
    implementation Deps.googleLocation
    implementation Deps.googleMapsUtils

    testImplementation Deps.jUnit
    androidTestImplementation Deps.androidTestRunner
    androidTestImplementation Deps.espresso
}

